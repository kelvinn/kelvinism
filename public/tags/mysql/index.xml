<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Mysql on Kelvin Nicholson</title>
    <link>http://localhost:1313/tags/mysql/</link>
    <description>Recent content in Mysql on Kelvin Nicholson</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jun 2009 20:30:00 +1000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Operation Cold House</title>
      <link>http://localhost:1313/2009/06/operation-cold-house_7266.html</link>
      <pubDate>Sun, 14 Jun 2009 20:30:00 +1000</pubDate>
      <guid>http://localhost:1313/2009/06/operation-cold-house_7266.html</guid>
      <description>&lt;p&gt;Status:&lt;/p&gt;
&lt;p&gt;My house is cold. I want to start playing with simple electronics before starting &lt;a href=&#34;http://www.kelvinism.com/projects/operation-field/&#34;&gt;Operation Field&lt;/a&gt;, so have created Operation Cold House.&lt;/p&gt;
&lt;p&gt;This is just simply sticking a temperature sensor onto an Arduino, linking that up to my little home &amp;ldquo;&lt;a href=&#34;http://www.kelvinism.com/tech-blog/true-consolidation/&#34;&gt;server&lt;/a&gt;&amp;rdquo;, and uploading that to my website. I&amp;rsquo;ll display some nifty graphs, too, and link it to &lt;a href=&#34;http://www.pachube.com/&#34;&gt;Pachube&lt;/a&gt;. Stay tuned.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: Complete! The proof is &lt;a href=&#34;http://www.kelvinism.com/howtos/simple-arduino-led-tutorial/&#34;&gt;in the&lt;/a&gt; &lt;a href=&#34;http://www.kelvinism.com/tech-blog/arduino-101/&#34;&gt;pudding&lt;/a&gt;. I now have a personal website from home (sorry, not public) that displays the daily and weekly temperature at home. The process is basically like this: my little Arduino gathers the temperature, and is polled every minute with a python script via cron. This script then sticks the time and temperature into MySQL. It also exports the temperature to Pachube. Every 30m I have a script that queries MySQL and uses Google&amp;rsquo;s Chart&amp;rsquo;s API to graph the temperature. Looks great, I&amp;rsquo;ll post a graph soon.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fixing mysql warning message</title>
      <link>http://localhost:1313/2009/05/fixing-mysql-warning-message_4782.html</link>
      <pubDate>Sun, 03 May 2009 20:30:00 +1000</pubDate>
      <guid>http://localhost:1313/2009/05/fixing-mysql-warning-message_4782.html</guid>
      <description>&lt;p&gt;After restoring databases from one server to another I sometimes get this error on Ubuntu or Debian:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;error: &amp;#39;Access denied for user &amp;#39;debian-sys-maint&amp;#39;@&amp;#39;localhost&amp;#39; (using password: YES)&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This makes a lot of sense, and the solution is pretty simple. If you look in:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat /etc/mysql/debian.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You&amp;rsquo;ll see the defaults for your system. Copy the password listed there, and open a connection to MySQL as root (or some other user). Next, enter this (lets say your password specified in debian.cnf was &amp;lsquo;abracadabra&amp;rsquo;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>NetFlow into MySQL with flow-tools</title>
      <link>http://localhost:1313/2008/12/netflow-into-mysql-with-flow-tools_5439.html</link>
      <pubDate>Sun, 21 Dec 2008 21:30:00 +1100</pubDate>
      <guid>http://localhost:1313/2008/12/netflow-into-mysql-with-flow-tools_5439.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been side-tracked on another little project, and keep coming back to NetFlow. For this project I&amp;rsquo;ll need to access NetFlow data with &lt;a href=&#34;http://www.djangoproject.com&#34;&gt;Django&lt;/a&gt;, but this is a bit tricky. First, I&amp;rsquo;m sort of lazy when it comes to my own project; maybe not lazy, I just like taking the most direct route. The most up-to-date NetFlow collector I noticed was &lt;a href=&#34;http://code.google.com/p/flow-tools/&#34;&gt;flow-tools&lt;/a&gt;, and there is even a switch to export the information into MySQL. Sweet! However, I wanted to insert the flows into MySQL automatically, or at least on a regular basis. I first started writing a python script that would do the job, but after a few minutes noticed flow-capture had a rotate_program switch, and started investigating. Since I somehow couldn&amp;rsquo;t find anywhere instructions how to insert the data automatically, here&amp;rsquo;s what I came up with:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Integrating OSSEC with Cisco IOS</title>
      <link>http://localhost:1313/2008/11/integrating-ossec-with-cisco-ios_7061.html</link>
      <pubDate>Sat, 15 Nov 2008 21:30:00 +1100</pubDate>
      <guid>http://localhost:1313/2008/11/integrating-ossec-with-cisco-ios_7061.html</guid>
      <description>&lt;p&gt;I rank OSSEC as one of my favorite pieces of open source software, and finally decided to play around with it more in my own free time. (Yup, I do this sort of stuff for &lt;em&gt;fun&lt;/em&gt;). My goal was quite simple: send syslog packets from my Cisco to my &amp;ldquo;proxy&amp;rdquo; server, running OSSEC. I found that, although OSSEC supports Cisco IOS logging, it didn&amp;rsquo;t really work. In fact, I couldn&amp;rsquo;t find any examples or articles of anybody actually getting it to work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automated MySQL Backups</title>
      <link>http://localhost:1313/2007/01/automated-mysql-backups_7112.html</link>
      <pubDate>Mon, 22 Jan 2007 21:30:00 +1100</pubDate>
      <guid>http://localhost:1313/2007/01/automated-mysql-backups_7112.html</guid>
      <description>&lt;p&gt;Historically I&amp;rsquo;ve used the ever-so-popular AutoMySQLBackup script.  While it seems to work just fine, I&amp;rsquo;ve decided to give another solution a whirl.  This solution, provided through &lt;a href=&#34;http://www.zmanda.com/&#34;&gt;Zmanda&lt;/a&gt;, seems to be less hackery and more enterprise.  The instructions are very clear, and the backup test went as planned.  Looks  like this is another gem for the toolchest.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MySQL Compat</title>
      <link>http://localhost:1313/2006/11/mysql-compat_1690.html</link>
      <pubDate>Wed, 15 Nov 2006 21:30:00 +1100</pubDate>
      <guid>http://localhost:1313/2006/11/mysql-compat_1690.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve run into this error quite a few times, might as well toss blog entry about it:&lt;br&gt;
ERROR 1064 at line 17: You have an error in your SQL syntax near &amp;lsquo;ENGINE=MyISAM DEFAULT CHARSET=latin1&amp;rsquo; at line 7&lt;br&gt;
One likely reason this comes about is because the data being imported/exported is not compatible with the database version. For instance, at home you export the information from a mysql5 database. Then you try to import it on a mysql3.23 database somewhere else &amp;ndash; and it craps out on you. Bummer.&lt;br&gt;
The solution is quite simple:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
