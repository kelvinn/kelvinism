<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Postgis on Kelvin Nicholson</title>
    <link>http://localhost:1313/tags/postgis/</link>
    <description>Recent content in Postgis on Kelvin Nicholson</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Sep 2013 10:45:00 +1000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/postgis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sydney&#39;s Education Levels Mapped</title>
      <link>http://localhost:1313/2013/09/sydneys-education-levels-mapped.html</link>
      <pubDate>Sun, 08 Sep 2013 10:45:00 +1000</pubDate>
      <guid>http://localhost:1313/2013/09/sydneys-education-levels-mapped.html</guid>
      <description>&lt;p&gt;I was talking to a friend about what education levels might look like across Sydney, and a friend challenged me to map it. The below map is my first draft.&lt;/p&gt;
&lt;p&gt;The map was derived by combining three datasets from the Australian Bureau of Statistics (&lt;a href=&#34;http://www.abs.gov.au/&#34;&gt;ABS&lt;/a&gt; - a department releasing some great datasets). The first dataset was the spatial data for &amp;ldquo;SA2&amp;rdquo; level boundaries, the second the population data for various geographic areas, and the third from the 2011 Census on Non-School Qualification Level of Education (e.g. Certificates, Diplomas, Masters, Doctorates). I aggregated all people with bachelors or higher in an SA2 region, and then divided that number by the total number of people in that region. A different methodology could have been used.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sydney Commute Times Mapped Part 1</title>
      <link>http://localhost:1313/2013/07/sydney-commute-times-mapped-part-1.html</link>
      <pubDate>Sun, 21 Jul 2013 10:06:00 +1000</pubDate>
      <guid>http://localhost:1313/2013/07/sydney-commute-times-mapped-part-1.html</guid>
      <description>&lt;p&gt;I quite like open data. I like data based on open standards (or mostly open standards) even better. Many transport operators around the world have started releasing their timetable data using (mostly) open standards, e.g. &lt;a href=&#34;http://en.wikipedia.org/wiki/General_Transit_Feed_Specification&#34;&gt;GTFS&lt;/a&gt;. One of the nice things about using a standard is that clever people have created tools to work with the timetable data, and those tools can now be used to manipulate timetable data from hundreds of agencies. The magnificent OpenTripPlanner is one such tool, and it works well with &lt;a href=&#34;http://131500.info/&#34;&gt;131500&lt;/a&gt;&amp;rsquo;s GTFS data.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mapping Mesh Blocks with TileMill</title>
      <link>http://localhost:1313/2013/07/mapping-mesh-blocks-with-tilemill.html</link>
      <pubDate>Sat, 20 Jul 2013 02:00:00 +1000</pubDate>
      <guid>http://localhost:1313/2013/07/mapping-mesh-blocks-with-tilemill.html</guid>
      <description>&lt;p&gt;This quick tutorial will detail how to prepair the ABS Mesh Blocks to be used with MapBox&amp;rsquo;s TileMill. Beyond scope is how to install postgresql, postgis and TileMill. There is a lot of documentation how to do these tasks.&lt;/p&gt;
&lt;p&gt;First, we create a database to import the &lt;a href=&#34;http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/1270.0.55.001July%202011?OpenDocument&#34;&gt;shapefile&lt;/a&gt; and &lt;a href=&#34;http://www.abs.gov.au/AUSSTATS/abs@.nsf/DetailsPage/2074.02011?OpenDocument&#34;&gt;population data&lt;/a&gt; into:&lt;/p&gt;
&lt;p&gt;Using &amp;lsquo;psql&amp;rsquo; or &amp;lsquo;SQL Query&amp;rsquo;, create a new database:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE DATABASE transport WITH TEMPLATE postgis20 OWNER postgres;
# Query returned successfully with no result in 5527 ms.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It is necessary to first import the Mesh Block spatial file using something like PostGIS Loader.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mapping Urban Density in Sydney</title>
      <link>http://localhost:1313/2013/07/mapping-urban-density-in-sydney.html</link>
      <pubDate>Sat, 20 Jul 2013 00:34:00 +1000</pubDate>
      <guid>http://localhost:1313/2013/07/mapping-urban-density-in-sydney.html</guid>
      <description>&lt;p&gt;Five years ago I started exploring different mapping technologies by detailing instructions on &lt;a href=&#34;http://www.kelvinism.com/2008/04/setting-up-mapnik-server-on-ubuntu_118.html&#34;&gt;installing Mapnik&lt;/a&gt; and &lt;a href=&#34;http://www.kelvinism.com/2008/11/revised-modtile-install-howto_1369.html&#34;&gt;mod_tile&lt;/a&gt;. Times have changed significantly in the last five years, and thanks a lot to the products offered by &lt;a href=&#34;http://www.mapbox.com/&#34;&gt;MapBox&lt;/a&gt;. After playing with TileMill, MBTiles, Leaflet and UTFGrids, it is great how many annoyances have been fixed by MapBox. I find it enjoyable making maps now, as I no longer need to worry about patching code just to get it to run, or mucking about with oddities in web browser.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing Mapnik on Ubuntu 7.10</title>
      <link>http://localhost:1313/2008/04/installing-mapnik-on-ubuntu-710_6688.html</link>
      <pubDate>Sat, 19 Apr 2008 20:30:00 +1000</pubDate>
      <guid>http://localhost:1313/2008/04/installing-mapnik-on-ubuntu-710_6688.html</guid>
      <description>&lt;p&gt;I have managed to install mapnik 0.4, 0.5, 0.5.1 and various SVN releases in-between on Ubuntu. While this isn&amp;rsquo;t in itself exciting, I think I manage to stumble at every installation. I typically forget to add the flags when building, so, to prevent myself from stumbling again, I&amp;rsquo;m going to write them out here.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Build mapnik&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ python scons/scons.py PYTHON=/usr/bin/python \\ 

PGSQL\_INCLUDES=/usr/include/postgresql \\

PGSQL\_LIBS=/usr/lib/postgresql BOOST\_INCLUDES=/usr/include/boost BOOST\_LIBS=/usr/lib
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Then install it&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo python scons/scons.py install PYTHON=/usr/bin/python \\ 

PGSQL\_INCLUDES=/usr/include/postgresql \\

PGSQL\_LIBS=/usr/lib/postgresql BOOST\_INCLUDES=/usr/include/boost BOOST\_LIBS=/usr/lib
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then proceed as normal.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
