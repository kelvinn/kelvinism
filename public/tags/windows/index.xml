<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Windows on Kelvin Nicholson</title>
    <link>http://localhost:1313/tags/windows/</link>
    <description>Recent content in Windows on Kelvin Nicholson</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Nov 2008 21:30:00 +1100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Django with SQL Server and IIS</title>
      <link>http://localhost:1313/2008/11/using-django-with-sql-server-and-iis_4115.html</link>
      <pubDate>Sat, 08 Nov 2008 21:30:00 +1100</pubDate>
      <guid>http://localhost:1313/2008/11/using-django-with-sql-server-and-iis_4115.html</guid>
      <description>&lt;p&gt;As you can tell from reading some of the other pages, I like Linux and open source. But I also like to answer the question &amp;ldquo;what if&amp;hellip;&amp;rdquo; This post is my [brief] run down of answering &amp;ldquo;what if I could run Django on Server 2003 with SQL Server and IIS.&amp;rdquo; Why, you may ask? To be honest with you, at this point, I don&amp;rsquo;t really know. One of the deciding factors was seeing that the django-mssql project maintains support for inspectdb, which means I could take a stock 2003 server running SQL Server, inspect the DB, and build a web app on top of it. The Django docs offer a lengthy &lt;a href=&#34;http://code.djangoproject.com/wiki/DjangoOnWindowsWithIISAndSQLServer&#34;&gt;howto&lt;/a&gt; for using Django with IIS and SQL Server, but the website for PyISAPIe seems to have been down for the last month or so. Without further delay, below are my notes on installing Django with SQL Server and IIS.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyGTK &#43; py2exe for Windows</title>
      <link>http://localhost:1313/2008/11/pygtk-py2exe-for-windows_8282.html</link>
      <pubDate>Sun, 02 Nov 2008 21:30:00 +1100</pubDate>
      <guid>http://localhost:1313/2008/11/pygtk-py2exe-for-windows_8282.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;m writing down these quick notes so I can remember the steps for getting py2exe to work with GTK.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download the GTK+ runtime&lt;/li&gt;
&lt;li&gt;Download py2exe&lt;/li&gt;
&lt;li&gt;Copy over your project into the windows box&lt;/li&gt;
&lt;li&gt;Create a setup.py file (see below)&lt;/li&gt;
&lt;li&gt;Run &amp;ldquo;c:\Python25\python.exe setup.py py2exe&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Copy over the lib, etc, and share folder from C:\Program Files\GTK2-Runtime into the dist folder&lt;/li&gt;
&lt;li&gt;Run app!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;setup.py:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from distutils.core import setup
import py2exe

setup(
name = &amp;#39;ploteq&amp;#39;,
description = &amp;#39;Bunnys Plotting Tool&amp;#39;,
version = &amp;#39;1.0&amp;#39;,

windows = \[
{
&amp;#39;script&amp;#39;: &amp;#39;ploteq.py&amp;#39;,
}
\],

options = {
&amp;#39;py2exe&amp;#39;: {
&amp;#39;packages&amp;#39;:&amp;#39;encodings&amp;#39;,
&amp;#39;includes&amp;#39;: &amp;#39;cairo, pango, pangocairo, atk, gobject&amp;#39;, 
}
},

data\_files=\[
&amp;#39;ploteq.glade&amp;#39;,
\]
)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Setting up Windows 2003 as an NTP Client</title>
      <link>http://localhost:1313/2008/04/setting-up-windows-2003-as-ntp-client_4269.html</link>
      <pubDate>Tue, 29 Apr 2008 20:30:00 +1000</pubDate>
      <guid>http://localhost:1313/2008/04/setting-up-windows-2003-as-ntp-client_4269.html</guid>
      <description>&lt;p&gt;I have had to search for the commands to setup a Windows 2003 box as an ntp client a few times now, so have decided to finally write them down here for my own good measure. Funny thing is, I&amp;rsquo;m pretty sure there are three ways to setup a 2003 box as an ntp client.&lt;/p&gt;
&lt;h4 id=&#34;1-via-the-cli&#34;&gt;1) Via the CLI&lt;/h4&gt;
&lt;p&gt;Open up the cmd prompt and type in:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;w32tm /config /manualpeerlist:&amp;#34;0.pool.ntp.org 1.pool.ntp.org 2.pool.ntp.org 3.pool.ntp.org&amp;#34; 
/syncfromflags:MANUAL /reliable:YES /update
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-via-the-cli-option-2&#34;&gt;2) Via the CLI, option 2&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;net time setsntp: &amp;#34;0.pool.ntp.org 1.pool.ntp.org 2.pool.ntp.org 3.pool.ntp.org&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-via-gui&#34;&gt;3) Via GUI&lt;/h4&gt;
&lt;p&gt;Type in &lt;strong&gt;gpedit.msc&lt;/strong&gt; and your local GPO editor will pop up. Go to the folder as indicated in the below screenshot and Enable the &amp;ldquo;Enable Windows NTP Client&amp;rdquo; option. Next set the &amp;ldquo;Configure Windows NTP Client&amp;rdquo; option to whatever time servers you so choose. As always, make sure to keep the 0x1 at the end.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
